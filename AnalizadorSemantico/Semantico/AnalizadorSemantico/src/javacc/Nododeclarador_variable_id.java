/* Generated By:JJTree: Do not edit this line. Nododeclarador_variable_id.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Nodo,NODE_EXTENDS=XNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package javacc;

import tabla.simbolos.v2.Atributos;

public
class Nododeclarador_variable_id extends SimpleNode {
  String name;
  
  public Nododeclarador_variable_id(int id) {
    super(id);
  }

  public Nododeclarador_variable_id(Compilador p, int id) {
    super(p, id);
  }

  public void interpret()
  {
	  SimpleNode nTipo = null;
	  if (parent instanceof Nodocampo_declaracion || parent instanceof Nododeclaracion_variable_local){
		  nTipo = (Nodotipo)((SimpleNode)parent).children[0];
		  if(nTipo != null){
			  if (Compilador.gestorTS.esLexemaValido((String)value)){
				  Atributos atribs = new Atributos((String)value, (String)nTipo.value, false);
				  Compilador.gestorTS.insertar((String)value, atribs);
				  System.out.println("Insertando identificador en TS: " + (String)value +
						  " de tipo " + (String)nTipo.value + " con alias "+atribs.getAlias());
				  
				  if (parent.jjtGetNumChildren() == 3){
					  // declaración con asignación
					  SimpleNode nValor = (SimpleNode) parent.jjtGetChild(2);
					  if (nValor instanceof Nodoidentificador){
						  if (Compilador.gestorTS.estaLexema((String)nValor.value)){
							  if (!ConstantesTipos.esCompatible(
								  Compilador.gestorTS.getAtributos((String)nValor.value).getTipo(),
								  (String)nTipo.value))
							  {
								  addErrSemantico(firstToken.beginLine, "el identificador al que intentas asignar '" +
											(String)value +"' no tiene un tipo compatible con '"+(String)nValor.value+"'");
							  }
						  }
						  else{
							addErrSemantico(firstToken.beginLine, "el identificador al que intentas asignar '" +
									(String)value +"' no es válido");
						  }
					  }
					  
					  /**
					   * La linea 58 la he añadido yo(Ricardo) la linea 59 era la única condicion del if
					   * 
					   * Al hacer la comprobación de:  int i, k;
					   * Daba un fallo de tipos porque comparaba  nValor.value="k" y nTipo.value="int"
					   * Entonces al no ser "k" un tipo valido la condición anterior no era la más adecuada 
					   * 
					   */
					  else if (ConstantesTipos.esTipoConocido((String)nTipo.value) && ConstantesTipos.esTipoConocido((String)nValor.value) &&
							  !ConstantesTipos.esCompatible((String)nTipo.value, (String)nValor.value)){
						  addErrSemantico(firstToken.beginLine, "tipos incompatibles '" +
								  (String)value +"' , '"+(String)nValor.value+"'");
					  }
				  }
			  }
			  else {
				  addErrSemantico(firstToken.beginLine, "el identificador: '"+(String)value+"' no es válido");
			  }
			  
		  }
		  else{
			  addErrSemantico(firstToken.beginLine, "obteniendo el tipo del identificador");
		  }
	  }
	  else if(parent instanceof Nododeclarador_metodo){
		  nTipo = (Nodotipo)((SimpleNode)parent).children[0];
		  if(nTipo != null){
			  if (Compilador.gestorTS.esLexemaValido((String)value)){
				  Atributos a = new Atributos((String)value, (String)nTipo.value, true);
				  // lo añadimos a los atributos del metodo
				  ((Nododeclarador_metodo)parent).atribs.add(a);
				  // peo tambien al ambito actual
				  Compilador.gestorTS.insertar((String)value, a);
				  
				  System.out.println("Insertando parámetro: " + (String)value +
						  " de tipo " + (String)nTipo.value + " con alias "+a.getAlias());
			  }
			  else{
				  addErrSemantico(firstToken.beginLine, "el identificador: "+(String)value+" no es válido");
			  }
		  }
		  else{
			  addErrSemantico(firstToken.beginLine, "obteniendo el tipo del identificador");
		  }
	  }
  }
}
/* JavaCC - OriginalChecksum=265a78532ed9fe4f80d1d6beac516403 (do not edit this line) */
