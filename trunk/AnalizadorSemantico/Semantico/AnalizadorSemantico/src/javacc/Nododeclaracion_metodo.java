/* Generated By:JJTree: Do not edit this line. Nododeclaracion_metodo.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Nodo,NODE_EXTENDS=XNode,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package javacc;

import tabla.simbolos.v2.Atributos;

public
class Nododeclaracion_metodo extends SimpleNode {
	
  public Nododeclaracion_metodo(int id) {
    super(id);
  }

  public Nododeclaracion_metodo(Compilador p, int id) {
    super(p, id);
  }
  
  public void interpret()
  {
	 
	  // Se supone que un metodo siempre estará compuesto por un tipo_metodo ,
	  // argumentos y finalmente una sentencia_return
	  int nodo_tipo_metodo = 0;
	  int nodo_declarador_metodo = 1;
	
	  // TipoMetodo, al terminar esta sentencia, este
	  // nodo(Nododeclaracion_metodo) ya tiene asignado su tipo
	  ((Nodotipo_metodo)jjtGetChild(nodo_tipo_metodo)).interpret();
	
	  // DeclaradorMetodo, ahora se declaran los parametros formales
	  ((Nododeclarador_metodo)jjtGetChild(nodo_declarador_metodo)).interpret();
	
	  // resto de hijos
	  for (int i = nodo_declarador_metodo + 1; i < jjtGetNumChildren(); i++)
          jjtGetChild(i).interpret();
	  
  }

}
/* JavaCC - OriginalChecksum=e7d93d282e1b0c942beb6dc404649ff7 (do not edit this line) */
